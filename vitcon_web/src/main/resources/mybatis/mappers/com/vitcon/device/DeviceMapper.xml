<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.vitcon.service.device.DeviceMapper">
	<resultMap type="com.vitcon.service.device.ChannelNameVO" id="channelNameVOMap">
	   <result column="channelrangetype" property="channelrangetype"></result>
	   <result column="channelrangedata" property="channelrangedata"></result>
	   <result column="channelname" property="channelname"></result>
	   <result column="channelmeasure" property="channelmeasure"></result>
	   <result column="channelrangedatadefult" property="channelrangedatadefult"></result>
	</resultMap>
	                                                
	<resultMap type="com.vitcon.service.device.DeviceChannelVO" id="deviceChannelVOMap">
	   <result column="channelid
	   " property="channelid"></result>
	   <result column="channelnamecd" property="channelnamecd"></result>
	</resultMap>

	<!-- <resultMap type="com.vitcon.service.device.MappingDeviceUser" id="deviceUserMap">
	   <collection property="user" resultMap="userVOMap"></collection>
	   <collection property="device" resultMap="deviceVOMap"></collection>
	</resultMap> -->
	
	<resultMap type="com.vitcon.service.device.DeviceGroupVO" id="deviceGroupVOMap">
	   <result column="userid" property="userid"></result>
       <result column="username" property="username"></result> 
       <result column="groupname" property="groupname"></result>
       <result column="groupid" property="groupid"></result>
       <result column="dd" property="dd"></result>
	</resultMap>	


	<resultMap type="com.vitcon.service.device.DeviceTypeVO" id="deviceTypeVOMap">
	   <result column="devicetypename" property="devicetypename"></result>
	   <result column="devicetypecd" property="devicetypecd"></result>
	</resultMap>
			
    <resultMap type="com.vitcon.service.user.UserVO" id="userVOMap">
       <result column="userid" property="userid"></result>
       <result column="username" property="username"></result> 
    </resultMap>
    
    <resultMap type="com.vitcon.service.device.DeviceVO" id="deviceVOMap">
       <result column="deviceid" property="deviceid"></result>
       <result column="devicename" property="devicename"></result>
       <result column="devicedesc" property="devicedesc"></result>
       <result column="devicetypecd" property="devicetypecd"></result>
       <result column="deviceinfo" property="deviceinfo"></result>
    </resultMap>
    
    <resultMap type="com.vitcon.service.device.DeviceChannelRangeVO" id="deviceChannelRangeVOMap">
    	<result column="channelrangedatauser" property="channelrangedatauser"></result>
    </resultMap>
    
    <resultMap type="com.vitcon.service.device.AllDeviceListVO" id="getAllDeviceList">
       <collection property="device" resultMap="deviceVOMap"></collection>
       <collection property="devicetype" resultMap="deviceTypeVOMap"></collection>
       <collection property="devicegroup" resultMap="deviceGroupVOMap"></collection>
       <collection property="user" resultMap="userVOMap"></collection>
       <collection property="devicechannel" resultMap="deviceChannelVOMap"></collection>
       <collection property="channelname" resultMap="channelNameVOMap"></collection>
       <collection property="devicechannelrange" resultMap="deviceChannelRangeVOMap"></collection>
    </resultMap>
     
    <!-- 디바이스 관리 페이지 -디바이스타입 리스트 및 타입별 센서 리스트 출력 기능-->
    <select id="getDeviceTypeList" parameterType="java.util.HashMap" resultMap="deviceTypeVOMap">
       SELECT c.devicetypecd
	          ,c.devicetypename 
         FROM (
	          SELECT ifnull(puserid, userid) as userid 
		        FROM user
		       WHERE userid = #{userid}
		      ) a
	          ,device b
	          ,devicetype c
        WHERE b.userid = a.userid
         <if test="groupid != null and !groupid.equals('')">
			   AND b.groupid = #{groupid}
         </if>
	      AND b.devicetypecd = c.devicetypecd
	 GROUP BY c.devicetypecd
    </select>
    <!--디바이스 관리 페이지-디바이스 타입별 디바이스리스트 가져오기-->
    
    <!-- 181217 구매자 아닌경우 소유한 디바이스 타입만 나오게 수정 -->
    <select id="getDeviceTypeListUser" parameterType="java.util.HashMap" resultMap="deviceTypeVOMap">
       SELECT c.devicetypecd
              ,c.devicetypename
        FROM userdevice a
             ,device b
             ,devicetype c
       WHERE a.userid = #{userid}
         AND a.deviceid = b.deviceid
         <if test="groupid != null and !groupid.equals('')">
			   AND b.groupid = #{groupid}
         </if>
         AND b.devicetypecd = c.devicetypecd
	 GROUP BY c.devicetypecd
    </select>
    
    <!--  <select id="getDeviceList" parameterType="java.util.HashMap" resultMap="getAllDeviceList">-->
    <select id="getDeviceList" parameterType="java.util.HashMap" resultType="java.util.HashMap">    
       SELECT c.devicetypecd
              ,c.devicetypename 
              ,d.groupname 
              ,d.groupid
              ,b.deviceid 
              ,b.devicename
              ,d.defaultyn 
              ,DATE_FORMAT(b.createdate, "%Y-%m-%d") AS createdate
              ,DATE_FORMAT(e.planexp, "%Y-%m-%d") AS enddate
              ,e.plantype
        FROM (
             SELECT ifnull(puserid, userid) as userid 
               FROM user
              WHERE userid = #{userid}
             ) a
             ,device b
             ,devicetype c
             ,devicegroup d
             ,plan e
       WHERE b.userid = a.userid
         AND b.deviceid = e.deviceid
         AND b.devicetypecd = c.devicetypecd
         AND b.groupid = d.groupid
         <if test="devicetypecd != null and !devicetypecd.equals('')">
            AND b.devicetypecd = #{devicetypecd}
         </if>
         <if test="groupid != null and !groupid.equals('')">
            AND d.groupid = #{groupid}
         </if>
         ORDER BY d.groupid asc , b.devicename asc         
    </select>
    
    <!-- 181217 과거데이터 내역 조회에서 구매자 아니면 할당된 디바이스목록만 나오도록 하는 쿼리 -->
    <select id="getDeviceListPast" parameterType="java.util.HashMap" resultType="java.util.HashMap">    
       SELECT b.deviceid 
              ,b.devicename
              ,c.devicetypename
        FROM userdevice a
             ,device b
             ,devicetype c
       WHERE a.userid = #{userid}
         AND a.deviceid = b.deviceid
         AND b.devicetypecd = c.devicetypecd
         <if test="groupid != null and !groupid.equals('')">
         	AND b.groupid = #{groupid}
         </if>
         <if test="devicetypecd != null and !devicetypecd.equals('')">
         	AND b.devicetypecd = #{devicetypecd}
         </if>
         ORDER BY b.groupid asc , b.devicename asc
    </select>

    <!-- 181217 구매자 아니면 디바이스가 들어있는 그룹만 조회 -->
    <select id="getGroupListUser" parameterType="String" resultType="com.vitcon.service.device.DeviceGroupVO">
       SELECT DISTINCT c.groupid
              ,c.groupname
        FROM userdevice a
             ,device b
             ,devicegroup c
       WHERE a.userid = #{userid}
         AND a.deviceid = b.deviceid
         AND b.groupid = c.groupid
         ORDER BY b.groupid asc
    </select>
    
    <!-- 디바이스 정보 얻기 -->
    <select id="getDevice" parameterType="String" resultType="java.util.HashMap">    
       SELECT c.devicetypecd
              ,c.devicetypename 
              ,d.groupname 
              ,d.groupid
              ,b.deviceid 
              ,b.devicename
              ,d.defaultyn 
              ,DATE_FORMAT(b.createdate, "%Y-%m-%d") AS createdate
        FROM  device b
             ,devicetype c
             ,devicegroup d
       WHERE b.deviceid = #{deviceid}
         AND b.devicetypecd = c.devicetypecd
         AND b.groupid = d.groupid
    </select>
    
    <!--디바이스 관리 페이지 -그룹 리스트 가져오기-->
    <select id="getGroupList" parameterType="String" resultType="com.vitcon.service.device.DeviceGroupVO">
       SELECT b.groupid 
              ,b.groupname
              ,b.defaultyn     
         FROM ( 
              SELECT ifnull(puserid, userid) as userid 
                FROM user
               WHERE userid = #{userid}
              ) a                   
              ,devicegroup b
        WHERE b.userid = a.userid
    </select>
 
    <update id="updateGroup" parameterType="com.vitcon.service.device.DeviceVO">
       UPDATE device
          SET groupid = #{groupid}
        WHERE deviceid = #{deviceid}
         <if test="userid != null">
         AND userid = #{userid}
         </if>
    </update>	
	<!--디바이스 관리 페이지>디바디이스 설정 - 범위설정값과 센서명, 그룹명, 센서설명등을 가져오기 -->
	<select id="getDeviceSetList" parameterType="String" resultType="java.util.HashMap">
		SELECT a.*
              ,b.channelrangedata as channelrangedatauser 
        FROM  (
              SELECT a.deviceid
                    ,a.devicename 
                    ,a.devicedesc 
                    ,a.devicetypecd
                    ,a.deviceinfo
                    ,b.channelid              
                    ,b.channelnamecd
                    ,a.saveinterval
                    ,a.pushenable
                    ,a.pushinterval
                    ,a.pushrepeat
                    ,a.pushsysenable
                    ,c.channelrangetype
                    ,c.channelrangedata     
                    ,c.channelrangedatadefult     
                    ,c.channelname
                    ,c.channelmeasure
                    ,d.groupid
               FROM device a
                    ,devicechannel b
                    ,channelname c
                    ,devicegroup d
              WHERE a.deviceid = #{deviceid}
                    AND a.devicetypecd = b.devicetypecd
                    AND b.channelnamecd = c.channelnamecd  
                    AND a.groupid = d.groupid
              ) a
LEFT OUTER JOIN devicechannelrange b
             ON (a.deviceid = b.deviceid
            AND a.devicetypecd = b.devicetypecd
            AND a.channelid = b.channelid)        
       ORDER BY a.channelid
	</select>
	<!--디바이스 관리 페이지>디바디이스 설정 - device의 범위설정값 저장 --> 
	<insert id="setDeviceSet" parameterType="java.util.HashMap" >
	   REPLACE
          INTO devicechannelrange(deviceid
                                  ,devicetypecd
                                  ,channelid
                                  ,channelrangedata)
                         
        VALUES (#{deviceid}
               ,#{devicetypecd}
               ,#{channelid}
               ,#{channelrangedata}
               )
	</insert>
	
	<select id="getAllChange" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	   SELECT ch.channelnamecd  
              ,ch.channelname  
              ,ch.channelmeasure 
              ,ch.channelrangetype 
              ,ch.channelrangedatadefult 
              ,dvch.channelid  
              ,dvchr.channelrangedata 
         FROM (
               SELECT ifnull(puserid, userid) as userid
                 FROM user
                WHERE userid = #{userid}
              ) a
         JOIN DEVICE AS dv
           ON a.userid =dv.userid
         JOIN devicechannelrange AS dvchr
           ON dvchr.deviceid = dv.deviceid
         JOIN devicechannel as dvch
           ON dvch.channelid = dvchr.channelid
          AND dvch.devicetypecd = dvchr.devicetypecd
         JOIN channelname AS ch
           ON ch.channelnamecd = dvch.channelnamecd
        WHERE dvchr.devicetypecd = #{devicetypecd}
	</select>
	
	<!--디바이스 그룹 리스트 select-->
	<select id="getDeviceGroup" parameterType="String" resultType="com.vitcon.service.device.DeviceGroupVO" >
	   SELECT dvg.groupname
	          ,dvg.groupid
	          ,count(dv.groupid) as count
	          ,dvg.defaultyn
         FROM (
	   	    SELECT ifnull(puserid, userid) as userid
                 FROM user
                WHERE userid = #{userid}
	   	   ) a
         JOIN devicegroup as dvg
           ON dvg.userid = a.userid
   LEFT OUTER JOIN device as dv
           ON dv.groupid = dvg.groupid
     Group by dvg.groupid 
	</select>
	<!--디바이스 그룹 리스트 insert-->
	<insert id="insertDeviceGroup" parameterType="com.vitcon.service.device.DeviceGroupVO">
	   INSERT INTO devicegroup (groupname
	                           ,userid
	                           ,defaultyn )
	        VALUES (#{groupname}
	               ,#{userid}
	               ,#{defaultyn})                
	</insert>
	<!--디바이스 그룹  update -->
	<update id="updateDeviceGroup" parameterType="com.vitcon.service.device.DeviceGroupVO">
       UPDATE devicegroup		
          SET groupname = #{groupname}
        WHERE groupid = #{groupid}
          AND userid = #{userid}
	</update>
	<!-- 디비이스 그룹 DELETE -->
	<delete id="deleteDeviceGroup" parameterType="com.vitcon.service.device.DeviceGroupVO">
	   DELETE 
	     FROM devicegroup
	    WHERE userid = #{userid}
	    <if test="groupid != null">
	     AND groupid = #{groupid}
	    </if> 
	    
	      
	</delete>
	
	
	<!-- devicechannelrange 테이블 insert  -->
	<insert id="insertDeviceChannelRange" parameterType="com.vitcon.service.device.DeviceChannelRangeVO">
	   INSERT INTO devicechannelrange (deviceid
	                                   ,devicetypecd
	                                   ,channelid
	                                   ,channelrangedata) 
	        VALUES (#{deviceid}
	               ,#{devicetypecd}
	               ,#{channelid}
	               ,#{channelrangedata})
	</insert>

	<select id="selectDeviceChannelRange" resultType="com.vitcon.service.device.DeviceChannelRangeVO">
       SELECT * FROM devicechannelrange
	</select>
	
	<!-- devicechannelrange 테이블 delete -->
	<delete id="deleteDeviceChannelRange" parameterType="java.util.HashMap">
	   DELETE 
         FROM devicechannelrange
        WHERE deviceid IN        
        <foreach collection="deviceid" item="item"  open="(" close=")" separator=",">
            #{item}
        </foreach>
	</delete>
	
	<!-- deviceid 로 channelrange 삭제 
	<delete id="deleteDeviceChannelRangeByDeviceid" parameterType="com.vitcon.service.device.DeviceChannelRangeVO">
	   DELETE 
         FROM devicechannelrange 
        WHERE deviceid = #{deviceid}
          AND channelid = #{channelid}
	</delete>
	-->
	
	<!-- 구매자 제품 선택 및 가이드    -->
	<select id="selectDeviceManual" parameterType="int" resultType="com.vitcon.service.device.DeviceManualVO">
	   SELECT seqno
	          ,devicetypecd
	          ,imagepath
	     FROM devicemanual
	    WHERE devicetypecd = #{devicetypecd}
	</select>
	
	<!--기기등록 시디바이스 존재여부   -->
	<select id="selectDeviceCount" parameterType="com.vitcon.service.device.DeviceVO" resultType="com.vitcon.service.device.DeviceVO">
	   SELECT count(*) as count
	     FROM device
	    <where>
	      <if test ="userid != null">
	       userid = #{userid}
	       </if>
	    </where>
	</select>
	
	<!--기기 리스트 가져오기 -->
	<select id="selectDeviceList" parameterType="com.vitcon.service.device.DeviceVO" resultType="com.vitcon.service.device.DeviceVO">
	   SELECT deviceid 
	          ,devicetypecd
	          ,userid
	     FROM device
	    <where>
	       <if test ="deviceid != null">
	       deviceid = #{deviceid}
	       </if>
	       <if test ="groupid != null">
	       AND groupid = #{groupid}
	       </if>
	       <if test ="userid != null">
	       AND userid = #{userid}
	       </if>
	    </where>
	</select>
	<!-- 디바이스 그룹 목록 가져오기    -->
	<select id="selectDeviceGroupForBuyer" parameterType="com.vitcon.service.device.DeviceGroupVO" resultType="com.vitcon.service.device.DeviceGroupVO">
	   SELECT groupid	          
	     FROM devicegroup 
	    WHERE devicegroup = #{devicegroup}
	</select>
	
	<!-- 디바이스 그룹 리스트 가져오기   -->
	<select id="selectDeviceGroup" parameterType="com.vitcon.service.device.DeviceGroupVO" resultType="com.vitcon.service.device.DeviceGroupVO">
	   SELECT a.groupid 
	         ,a.groupname
	         ,a.userid
	         ,a.defaultyn	          
	     FROM devicegroup a
	         ,(
	            SELECT ifnull(puserid, userid) as userid 
                  FROM user
		         WHERE userid = #{userid}
		      ) b
		WHERE a.userid = b.userid	    	       
	       <if test="defaultyn != null">
	      AND a.defaultyn = #{defaultyn}
	       </if>
	       <if test="groupid != null">
	      AND a.groupid = #{groupid}
	       </if>
	</select>
	<!-- 기기등록  -->
	<insert id="insertDevice" parameterType ="com.vitcon.service.device.DeviceVO">
	   INSERT INTO device (deviceid
                           ,userid
                           ,createdate
                           ,updatedate
                           ,devicetypecd
                           ,groupid
                           ,deleteflag
                           ,devicename
                           ,wifissid
                           ,wifipasswd
                           ,deviceinfo
                           ,devicedesc)
	        VALUES (#{deviceid}
                    ,#{userid}
                    ,#{createdate}
                    ,#{updatedate}
                    ,#{devicetypecd}
                    ,#{groupid}
                    ,#{deleteflag}
                    ,#{devicename}
                    ,#{wifissid}
                    ,#{wifipasswd}
                    ,#{deviceinfo}
                    ,#{devicedesc})
	</insert>
	

	
	<!-- userdevice테이블 delete문  -->
	<delete id="deleteUserDevice" parameterType="String">
	   DELETE
	     FROM userdevice
	    WHERE deviceid = #{deviceid} 
	</delete>
	
	<!--device테이블 delete문  -->
	<delete id="deleteDevice" parameterType="String">
	   DELETE
	     FROM device
	    WHERE deviceid = #{deviceid}
	</delete>
	

	<update id="updateDevice" parameterType="com.vitcon.service.device.DeviceVO">
	   UPDATE device
	      <set>
			  <if test="wifissid != null">
			     wifissid = #{wifissid},
			  </if>
			  <if test="wifipasswd != null">
			     wifipasswd = #{wifipasswd},
			  </if>
			  <if test="deviceinfo != null">
			     deviceinfo = #{deviceinfo},
			  </if>
			  <if test="devicedesc != null">
			     devicedesc = #{devicedesc},
			  </if>
			  <if test="groupid != null">
			     groupid = #{groupid},
			  </if>
			  <if test="deleteflag != null">
			     deleteflag = #{deleteflag},
			  </if>
			  <if test="devicetypecd != null">
			     devicetypecd = #{devicetypecd},
			  </if>
			  <if test="updatedate != null">
			     updatedate = #{updatedate},
			  </if>
			  <if test="createdate != null">
			     createdate = #{createdate},
			  </if>
			  <if test="userid != null">
			     userid = #{userid},
			  </if>
			  <if test="devicename != null">
			     devicename = #{devicename},
			  </if>
			  <if test="saveinterval != null">
			     saveinterval = #{saveinterval},
			  </if>
			  <if test="pushenable != null">
			  	 pushenable = #{pushenable},
			  </if>
			  <if test="pushsysenable != null">
			  	 pushsysenable = #{pushsysenable},
			  </if>
			  <if test="pushinterval != null">
			     pushinterval = #{pushinterval},
			  </if>
			  <if test="pushrepeat != null">
			     pushrepeat = #{pushrepeat},
			  </if>
			  
		  </set>
		  WHERE deviceid = #{deviceid}
	</update>
	
	<!--  dashboard 리스트뷰 작업 쿼리  -->
	<!-- 리스트뷰 페이지 - 구매자 로그인 (디바이스 관리 권한에 따라 구매자와 중간관리자,사용자로 나뉘어서 리스트뷰에 보여줘야함 )
	 getDeviceList와 똑같은 구문이나 deviceicon 테이블 추가 되어짐  현재 전민재주임님이 작업중임으로 getDeviceList 에다 사용하지 말고 따로 작성-->
	<select id="selectBuyer" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	   SELECT c.devicetypecd
              ,c.devicetypename 
              ,d.groupname 
              ,d.groupid
              ,b.deviceid 
              ,b.devicename
              ,b.pushenable
              ,b.pushsysenable
              ,d.defaultyn 
              ,e.deviceiconpath
              ,e.deviceiconid
              ,DATE_FORMAT(b.createdate, "%Y-%m-%d") AS createdate
         FROM (
               SELECT ifnull(puserid, userid) as userid 
                FROM user
               WHERE userid = #{userid}
              ) a
              ,device b
              ,devicetype c
              ,devicegroup d
              ,deviceicon e
        WHERE b.userid = a.userid
          AND b.devicetypecd = c.devicetypecd
          AND b.groupid = d.groupid
          AND e.deviceiconid = c.deviceiconid
          order by b.devicename
	</select>
	
	<!-- 리스트뷰 페이지 - 구매자 로그인 (디바이스 관리 권한에 따라 구매자와 중간관리자,사용자로 나뉘어서 리스트뷰에 보여줘야함 )-->
	<select id="selectBuyerExcept" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	   SELECT c.devicetypecd
                 ,c.devicetypename 
                 ,d.groupname 
                 ,d.groupid
                 ,b.deviceid
                 ,b.pushenable
                 ,b.pushsysenable
                 ,a.userid
                 ,e.deviceiconpath
                 ,e.deviceiconid
                 ,b.devicename
                 ,d.defaultyn
                 ,b.deviceid as bid
                 ,f.deviceid as fid
                 ,DATE_FORMAT(b.createdate, "%Y-%m-%d") AS createdate
           FROM (
                SELECT ifnull(puserid, userid) as userid 
                  FROM user
                 WHERE userid = #{userid}
                ) a
                ,device b
                ,devicetype c
                ,devicegroup d
                ,deviceicon e
                ,userdevice f
          WHERE b.userid = a.userid
            AND b.devicetypecd = c.devicetypecd
            AND e.deviceiconid = c.deviceiconid
            AND b.groupid = d.groupid
            AND b.deviceid = f.deviceid
	   	    AND f.userid = #{userid}
	   	    order by b.devicename
	</select>
	
	<insert id="replaceUserApp" parameterType="com.vitcon.service.device.UserAppVO" >
	   REPLACE INTO userapp (appid
                        , userid
                        , token
                        , appversion
                        , osversion
                        , modelname 
                        , apptype)
	          value (#{appid}
                     , #{userid}
                     , #{token}
                     , #{appversion}
                     , #{osversion}
                     , #{modelname}
                     , #{apptype});
	</insert>

   	<!-- 구매자 삭제 기능 : 구매자 제외 아이디 삭제 -->
    <delete id="deleteUserApp" parameterType = "java.util.HashMap">
    	DELETE
    	  FROM userapp
    	<where>  
	     userid IN
		 <foreach collection = "userid" item = "item" open = "(" close=")" separator = ",">
		     #{item}
		 </foreach>
		 </where>
    </delete>

    <!--  collection예제  -->
   <!--  <select id="getUserDevice" parameterType="String" resultMap="deviceUserMap">
      select u.username
             ,u.userid
             ,dv.deviceid
             ,dv.devicename
        from user as u
        join device as dv
          on u.userid=dv.userid
       where u.userid = #{userid}
    </select> -->
    
    <delete id="deleteUserAppRecentList" parameterType = "java.util.HashMap">
    	DELETE
    	  FROM userapp
    	<where>  
	     appid IN
		 <foreach collection = "list" item = "map" open = "(" close=")" separator = ",">
		     #{map.appid}
		 </foreach>
		 </where>
    </delete>
    
    <select id="getUserAppRecentList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
       SELECT * from userapp 
		where 
		userid = #{userid} 
		and 
		appid  not in
		(
		  select appid from
		 <choose>
		 <when test="grade == 10">
		  (select appid, regdate from userapp where userid=#{userid} order by regdate desc limit 3) as tmp)
		 </when>
		 <otherwise>
		  (select appid, regdate from userapp where userid=#{userid} order by regdate desc limit 1) as tmp)
		 </otherwise>
		</choose> 
    </select>
    
    <select id="getNameList" parameterType="String" resultType="com.vitcon.service.device.DeviceNameVO">
       SELECT  b.devicename
	    	  ,b.deviceid
	    	  ,b.devicetypecd
   	   FROM (
       	SELECT ifnull(puserid, userid) as userid 
        	FROM user
       	WHERE userid = #{userid}
      ) a
       ,device b
  		WHERE b.userid = a.userid
    </select>
 
 	<select id="getNameListUser" parameterType="String" resultType="com.vitcon.service.device.DeviceNameVO">
       SELECT  b.devicename
              ,b.deviceid
              ,b.devicetypecd
  	   FROM  userdevice a
       		,device b
 	   WHERE a.userid = #{userid}
    	 AND a.deviceid = b.deviceid
    </select>
    
 	<update id="updateSysPush" parameterType="com.vitcon.service.device.DeviceVO">
		UPDATE device 
		SET pushsysenable = #{pushsysenable}
		WHERE deviceid = #{deviceid}
	</update>
 
 	<select id="getSystemPush" parameterType="String" resultType="java.util.Map">
        SELECT 
        	a.deviceid,
        	a.pushsysenable
        FROM device a
        WHERE deviceid = #{deviceid}
    </select>
 
 	<select id="getPlan" parameterType="String" resultType="Integer">
 		SELECT count(deviceid) from plan WHERE deviceid = #{deviceid}
 	</select>
 
 	<insert id="insertPlan" parameterType="com.vitcon.service.device.DevicePlanVO">
	 	INSERT INTO plan (
	 		deviceid, 
	 		regdate, 
	 		plantype, 
	 		planexp  ) 
	 	VALUES ( 
	 		#{deviceid}, 
	 		#{regdate}, 
	 		#{plantype}, 
	 		#{planexp} )
 	</insert>
 	
 	<insert id="planHistoryInsert" parameterType="com.vitcon.service.device.DevicePlanHistoryVO">
	 	INSERT INTO historyplan ( 
	 		deviceid, 
	 		regdate, 
	 		plantype, 
	 		planexp, 
	 		note ) 
	 	VALUES ( 
	 		#{deviceid}, 
	 		#{regdate}, 
	 		#{plantype}, 
	 		#{planexp}, 
	 		#{note} )
 	</insert>
 
</mapper>